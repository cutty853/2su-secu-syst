
out/emily:     format de fichier elf64-x86-64


Déassemblage de la section .init :

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Déassemblage de la section .plt :

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <puts@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <puts@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <printf@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <printf@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <strcmp@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <strcmp@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <malloc@plt>:
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <malloc@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <__isoc99_scanf@plt>:
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <__isoc99_scanf@GLIBC_2.7>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

Déassemblage de la section .text :

0000000000001090 <_start>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	31 ed                	xor    %ebp,%ebp
    1096:	49 89 d1             	mov    %rdx,%r9
    1099:	5e                   	pop    %rsi
    109a:	48 89 e2             	mov    %rsp,%rdx
    109d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10a1:	50                   	push   %rax
    10a2:	54                   	push   %rsp
    10a3:	4c 8d 05 06 02 00 00 	lea    0x206(%rip),%r8        # 12b0 <__libc_csu_fini>
    10aa:	48 8d 0d 8f 01 00 00 	lea    0x18f(%rip),%rcx        # 1240 <__libc_csu_init>
    10b1:	48 8d 3d 02 01 00 00 	lea    0x102(%rip),%rdi        # 11ba <main>
    10b8:	ff 15 22 2f 00 00    	callq  *0x2f22(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10be:	f4                   	hlt    
    10bf:	90                   	nop

00000000000010c0 <deregister_tm_clones>:
    10c0:	48 8d 3d 91 2f 00 00 	lea    0x2f91(%rip),%rdi        # 4058 <__TMC_END__>
    10c7:	48 8d 05 8a 2f 00 00 	lea    0x2f8a(%rip),%rax        # 4058 <__TMC_END__>
    10ce:	48 39 f8             	cmp    %rdi,%rax
    10d1:	74 15                	je     10e8 <deregister_tm_clones+0x28>
    10d3:	48 8b 05 fe 2e 00 00 	mov    0x2efe(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10da:	48 85 c0             	test   %rax,%rax
    10dd:	74 09                	je     10e8 <deregister_tm_clones+0x28>
    10df:	ff e0                	jmpq   *%rax
    10e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10e8:	c3                   	retq   
    10e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010f0 <register_tm_clones>:
    10f0:	48 8d 3d 61 2f 00 00 	lea    0x2f61(%rip),%rdi        # 4058 <__TMC_END__>
    10f7:	48 8d 35 5a 2f 00 00 	lea    0x2f5a(%rip),%rsi        # 4058 <__TMC_END__>
    10fe:	48 29 fe             	sub    %rdi,%rsi
    1101:	48 89 f0             	mov    %rsi,%rax
    1104:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1108:	48 c1 f8 03          	sar    $0x3,%rax
    110c:	48 01 c6             	add    %rax,%rsi
    110f:	48 d1 fe             	sar    %rsi
    1112:	74 14                	je     1128 <register_tm_clones+0x38>
    1114:	48 8b 05 d5 2e 00 00 	mov    0x2ed5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    111b:	48 85 c0             	test   %rax,%rax
    111e:	74 08                	je     1128 <register_tm_clones+0x38>
    1120:	ff e0                	jmpq   *%rax
    1122:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1128:	c3                   	retq   
    1129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001130 <__do_global_dtors_aux>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	80 3d 1d 2f 00 00 00 	cmpb   $0x0,0x2f1d(%rip)        # 4058 <__TMC_END__>
    113b:	75 33                	jne    1170 <__do_global_dtors_aux+0x40>
    113d:	55                   	push   %rbp
    113e:	48 83 3d b2 2e 00 00 	cmpq   $0x0,0x2eb2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1145:	00 
    1146:	48 89 e5             	mov    %rsp,%rbp
    1149:	74 0d                	je     1158 <__do_global_dtors_aux+0x28>
    114b:	48 8b 3d fe 2e 00 00 	mov    0x2efe(%rip),%rdi        # 4050 <__dso_handle>
    1152:	ff 15 a0 2e 00 00    	callq  *0x2ea0(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1158:	e8 63 ff ff ff       	callq  10c0 <deregister_tm_clones>
    115d:	c6 05 f4 2e 00 00 01 	movb   $0x1,0x2ef4(%rip)        # 4058 <__TMC_END__>
    1164:	5d                   	pop    %rbp
    1165:	c3                   	retq   
    1166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    116d:	00 00 00 
    1170:	c3                   	retq   
    1171:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1178:	00 00 00 00 
    117c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 67 ff ff ff       	jmpq   10f0 <register_tm_clones>

0000000000001189 <is_valid>:
    1189:	55                   	push   %rbp
    118a:	48 89 e5             	mov    %rsp,%rbp
    118d:	48 83 ec 10          	sub    $0x10,%rsp
    1191:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1199:	48 8d 35 64 0e 00 00 	lea    0xe64(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    11a0:	48 89 c7             	mov    %rax,%rdi
    11a3:	e8 b8 fe ff ff       	callq  1060 <strcmp@plt>
    11a8:	85 c0                	test   %eax,%eax
    11aa:	75 07                	jne    11b3 <is_valid+0x2a>
    11ac:	b8 01 00 00 00       	mov    $0x1,%eax
    11b1:	eb 05                	jmp    11b8 <is_valid+0x2f>
    11b3:	b8 00 00 00 00       	mov    $0x0,%eax
    11b8:	c9                   	leaveq 
    11b9:	c3                   	retq   

00000000000011ba <main>:
    11ba:	55                   	push   %rbp
    11bb:	48 89 e5             	mov    %rsp,%rbp
    11be:	48 83 ec 10          	sub    $0x10,%rsp
    11c2:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    11c9:	00 
    11ca:	bf 00 01 00 00       	mov    $0x100,%edi
    11cf:	e8 9c fe ff ff       	callq  1070 <malloc@plt>
    11d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11d8:	48 8d 3d 2a 0e 00 00 	lea    0xe2a(%rip),%rdi        # 2009 <_IO_stdin_used+0x9>
    11df:	b8 00 00 00 00       	mov    $0x0,%eax
    11e4:	e8 67 fe ff ff       	callq  1050 <printf@plt>
    11e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11ed:	48 89 c6             	mov    %rax,%rsi
    11f0:	48 8d 3d 28 0e 00 00 	lea    0xe28(%rip),%rdi        # 201f <_IO_stdin_used+0x1f>
    11f7:	b8 00 00 00 00       	mov    $0x0,%eax
    11fc:	e8 7f fe ff ff       	callq  1080 <__isoc99_scanf@plt>
    1201:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1205:	48 89 c7             	mov    %rax,%rdi
    1208:	e8 7c ff ff ff       	callq  1189 <is_valid>
    120d:	85 c0                	test   %eax,%eax
    120f:	74 0e                	je     121f <main+0x65>
    1211:	48 8d 3d 0a 0e 00 00 	lea    0xe0a(%rip),%rdi        # 2022 <_IO_stdin_used+0x22>
    1218:	e8 23 fe ff ff       	callq  1040 <puts@plt>
    121d:	eb 0c                	jmp    122b <main+0x71>
    121f:	48 8d 3d 0c 0e 00 00 	lea    0xe0c(%rip),%rdi        # 2032 <_IO_stdin_used+0x32>
    1226:	e8 15 fe ff ff       	callq  1040 <puts@plt>
    122b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    122f:	48 89 c7             	mov    %rax,%rdi
    1232:	e8 f9 fd ff ff       	callq  1030 <free@plt>
    1237:	b8 00 00 00 00       	mov    $0x0,%eax
    123c:	c9                   	leaveq 
    123d:	c3                   	retq   
    123e:	66 90                	xchg   %ax,%ax

0000000000001240 <__libc_csu_init>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	41 57                	push   %r15
    1246:	4c 8d 3d 9b 2b 00 00 	lea    0x2b9b(%rip),%r15        # 3de8 <__frame_dummy_init_array_entry>
    124d:	41 56                	push   %r14
    124f:	49 89 d6             	mov    %rdx,%r14
    1252:	41 55                	push   %r13
    1254:	49 89 f5             	mov    %rsi,%r13
    1257:	41 54                	push   %r12
    1259:	41 89 fc             	mov    %edi,%r12d
    125c:	55                   	push   %rbp
    125d:	48 8d 2d 8c 2b 00 00 	lea    0x2b8c(%rip),%rbp        # 3df0 <__init_array_end>
    1264:	53                   	push   %rbx
    1265:	4c 29 fd             	sub    %r15,%rbp
    1268:	48 83 ec 08          	sub    $0x8,%rsp
    126c:	e8 8f fd ff ff       	callq  1000 <_init>
    1271:	48 c1 fd 03          	sar    $0x3,%rbp
    1275:	74 1f                	je     1296 <__libc_csu_init+0x56>
    1277:	31 db                	xor    %ebx,%ebx
    1279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1280:	4c 89 f2             	mov    %r14,%rdx
    1283:	4c 89 ee             	mov    %r13,%rsi
    1286:	44 89 e7             	mov    %r12d,%edi
    1289:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    128d:	48 83 c3 01          	add    $0x1,%rbx
    1291:	48 39 dd             	cmp    %rbx,%rbp
    1294:	75 ea                	jne    1280 <__libc_csu_init+0x40>
    1296:	48 83 c4 08          	add    $0x8,%rsp
    129a:	5b                   	pop    %rbx
    129b:	5d                   	pop    %rbp
    129c:	41 5c                	pop    %r12
    129e:	41 5d                	pop    %r13
    12a0:	41 5e                	pop    %r14
    12a2:	41 5f                	pop    %r15
    12a4:	c3                   	retq   
    12a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    12ac:	00 00 00 00 

00000000000012b0 <__libc_csu_fini>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	c3                   	retq   

Déassemblage de la section .fini :

00000000000012b8 <_fini>:
    12b8:	f3 0f 1e fa          	endbr64 
    12bc:	48 83 ec 08          	sub    $0x8,%rsp
    12c0:	48 83 c4 08          	add    $0x8,%rsp
    12c4:	c3                   	retq   
